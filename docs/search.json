[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Shu Luan",
    "section": "",
    "text": "Hi, I’m Shu Luan. Welcome to my website! I’m currently a ScM Biostatistics student at Johns Hopkins Bloomberg School of Public Health. If you are interested in learning more about me, you can find a brief bio in my about page. I have linked some of the ways to connect with me below, please feel free to check out."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Bio\nI’m currently a ScM Biostatistics student at Johns Hopkins Bloomberg School of Public Health. During my undergraduate studies, I have been doing single cell transcriptomics research on Human Plasma Cell Maturation in Dr. Greg Gibson’s lab at Georgia Tech. This experience inspired me to look into the statistical methods behind high dimensional data analysis. Motivated by a desire to delve deeper into statistical theories, I chose Johns Hopkins as the platform to refine my skills and apply this knowledge to make informed and responsible decisions in data analysis.\nOutside of academics, I like photography, traveling, cooking and bartending. I post some of my photos (include my foods and drinks) on Instagram.\n\n\nEducation\nJohns Hopkins University 2023-Present\nScM Biostatistics\nGeorgia Institute of Technology 2020-2023\nBS Biology (minored in Mathematics and Biomedical Engineering)"
  },
  {
    "objectID": "analysis.html",
    "href": "analysis.html",
    "title": "Example Analysis",
    "section": "",
    "text": "I dedicated some time in my undergraduate to explore a wide variety of topics. When I was learning a summer Latin course, the verses and stories ignited my interests in the ancient Roman history. The Roman Empire was a blooming civilization rose from a humble beginning in the distant past. A fair amount of documentations provided us a window to observe the life of Romans. While glories accompanied the Roman Republic and Roman Empire through most of its history, the intrigues and conflicts within the political body have been an interesting subject for historians. Wikipedia collected a list of Roman Emperors with information annotated according to ancient documents. (Contributors 2019) This dataset is shared by Tidy Tuesday for public use. (Hughes 2023) We are going to take this dataset to explore the life and death of Roman Emperors for anyone might be interested in the Roman history.\n\n\n\n\n\nAugustus, the first Roman Emperor. Wikipedia: List of Roman emperors"
  },
  {
    "objectID": "analysis.html#the-life-and-death-of-roman-emperors",
    "href": "analysis.html#the-life-and-death-of-roman-emperors",
    "title": "Example Analysis",
    "section": "",
    "text": "I dedicated some time in my undergraduate to explore a wide variety of topics. When I was learning a summer Latin course, the verses and stories ignited my interests in the ancient Roman history. The Roman Empire was a blooming civilization rose from a humble beginning in the distant past. A fair amount of documentations provided us a window to observe the life of Romans. While glories accompanied the Roman Republic and Roman Empire through most of its history, the intrigues and conflicts within the political body have been an interesting subject for historians. Wikipedia collected a list of Roman Emperors with information annotated according to ancient documents. (Contributors 2019) This dataset is shared by Tidy Tuesday for public use. (Hughes 2023) We are going to take this dataset to explore the life and death of Roman Emperors for anyone might be interested in the Roman history.\n\n\n\n\n\nAugustus, the first Roman Emperor. Wikipedia: List of Roman emperors"
  },
  {
    "objectID": "analysis.html#data-source",
    "href": "analysis.html#data-source",
    "title": "Example Analysis",
    "section": "Data source",
    "text": "Data source\nIn this analysis, we are going to use two data sources. The major one is the emperors.csv dataset from tidytuesdayR, and the other is the ancient Roman Empire map ca 200 AD data in the package cawd. (Heath 2023)\n\nemperors.csv\n\n\n\nvariable\nclass\ndescription\n\n\n\n\nindex\ndouble\nNumerical Index\n\n\nname\ncharacter\nName\n\n\nname_full\ncharacter\nFull Name\n\n\nbirth\ndate\nBirth date\n\n\ndeath\ndate\nDeath date\n\n\nbirth_cty\ncharacter\nBirth city\n\n\nbirth_prv\ncharacter\nBirth Province\n\n\nrise\ncharacter\nHow did they come to power\n\n\nreign_start\ndate\nDate of start of reign\n\n\nreign_end\ndate\nDate of end of reign\n\n\ncause\ncharacter\nCause of death\n\n\nkiller\ncharacter\nKiller\n\n\ndynasty\ncharacter\nDynasty name\n\n\nera\ncharacter\nEra\n\n\nnotes\ncharacter\nNotes\n\n\nverif_who\ncharacter\nIf verified, by whom\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe cawd package can be installed by devtools::install_github(\"sfsheath/cawd\"). The map data is a large SpatialPolygonsDataFrame obtained through data(awmc.roman.empire.200.sp). For it to be worked with ggplot2 package, we need to use the tidy command in broom package to process it into a ggplot2-friendly format.\n\n\n\n\nCode\n# check for missing packages and install\nusing.packages &lt;- c('ggplot2','here','tidyverse','tidytext','remotes','devtools','tidygeocoder','broom','ggthemes','kableExtra')\n\nmask.packages &lt;- !using.packages %in% installed.packages()\n\nif (any(mask.packages)){\n  install.packages(using.packages[mask.packages])\n}\n\nif (!'cawd' %in% installed.packages()){\n  devtools::install_github(\"sfsheath/cawd\")\n}\n  \n\n# read in required packages\nlapply(using.packages, require, character.only = TRUE)\n\n\n\n\nCode\n# tests if a directory named \"data\" exists locally\nif (!dir.exists(here(\"data\"))) {\n  dir.create(here(\"data\"))\n} \n\nrds_files &lt;- c(\"emperors.RDS\",\"empire_maps.RDS\")\n\n## Check whether we have all data files\nif (any(!file.exists(here(\"data\", rds_files)))) {\n    ## If we don't, then download the data\n    emperors &lt;- readr::read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-08-13/emperors.csv\",show_col_types = FALSE)\n    \n    ## assign longitude and latitude data for emperors birth city\n    emperors &lt;- emperors %&gt;% \n      tidygeocoder::geocode(city = birth_cty) \n    \n    # acquire empire data and tidy into ggplot2 format\n    library(cawd)\n    data(awmc.roman.empire.200.sp)\n    broom::tidy(awmc.roman.empire.200.sp) -&gt; roman.empire.maps.gg\n    \n    ## Then save the data objects to RDS files\n    saveRDS(emperors, file = here(\"data\", \"emperors.RDS\"))\n    saveRDS(roman.empire.maps.gg, file = here(\"data\", \"empire_maps.RDS\"))\n} \nemperors &lt;- readRDS(here(\"data\", \"emperors.RDS\"))\nroman.empire.maps.gg &lt;- readRDS(here(\"data\", \"empire_maps.RDS\"))"
  },
  {
    "objectID": "analysis.html#analysis",
    "href": "analysis.html#analysis",
    "title": "Example Analysis",
    "section": "Analysis",
    "text": "Analysis\n\nWhere did Roman Emperors born?\nThe first question we can explore with this dataset is the birth cities of Roman Emperors. In the chart below, Rome and Sirmium stood out as the cities born the most Emperors.\n\n\nCode\nemperors.longlat &lt;- emperors %&gt;% \n  count(birth_cty,sort=TRUE) %&gt;%\n  filter(!is.na(birth_cty)) %&gt;%\n  left_join(select(emperors,c('birth_cty','long','lat'))) %&gt;%\n  group_by(birth_cty)\n\nemperors.longlat %&gt;% \n  count(birth_cty,sort=TRUE) %&gt;%\n  filter(!is.na(birth_cty)) %&gt;%\n  ggplot(aes(x=fct_reorder(birth_cty, n,.desc = TRUE),n)) +\n    geom_col(aes(fill=cut(n, c(0, 5, 10))))+\n    scale_fill_manual(values=c('#535D67','#F5B355'))+\n    scale_y_continuous(name='count',breaks=0:10)+\n  # Assign appropriate axis labels and titles  \n  xlab('Birth Cities')+\n  ylab('Count') +\n  labs(title = 'Number of Emperors born in each city', \n       subtitle = 'Most Emperors born in Rome and Sirmium',\n       caption = 'Data Source: Wikipedia')+\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+\n  # Adjust text styles\n  theme(axis.text = element_text(size = 12),\n        axis.title = element_text(size = 16,face = 'bold'),\n        plot.title = element_text(size = 20,face = 'bold',color = 'black'),\n        legend.position = \"none\",\n        plot.subtitle = element_text(size = 18))\n\n\n\n\n\n\n\nCode\nworld.maps &lt;- map_data(\"world\")\n\nroman.empire.maps.gg %&gt;% ggplot(aes(x = long, y = lat)) +\n  geom_polygon(data=world.maps,aes(x=long,y=lat,group=group),fill = 'grey',alpha = .5)+\n  geom_polygon(aes(group = group), colour=\"black\", fill = 'darkred', alpha = .5) +\n  coord_map(xlim = c(-10, 40),ylim = c(23, 55))+\n  geom_text(aes(label = birth_cty), \n            data = unique(subset(emperors.longlat,n&gt;5)),  \n            size = 4, hjust = 0.6,vjust=2.5)+\n  geom_point(data=emperors.longlat, \n             aes(x = long, y = lat, size = n), \n             alpha=0.4, \n             color=\"darkblue\") +\n  scale_size(range = c(3, 10))+\n  # Assign appropriate axis labels and titles  \n  labs(title = 'Emperors birth locations on Roman Empire Map (ca. 200 AD)', \n       subtitle = 'Two hotspots of cities surrounding Rome and Sirmium',\n       caption = 'Data Source: cawd package and Wikipedia')+\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+\n  # Adjust text styles\n  theme_bw()+\n  theme(axis.title = element_blank(),\n        axis.text = element_blank(),\n        axis.ticks = element_blank(),\n        plot.title = element_text(size = 20,face = 'bold',color = 'black'),\n        legend.position = \"none\",\n        plot.subtitle = element_text(size = 18),\n        panel.grid.major = element_blank(),\n        panel.background = element_rect(fill = 'aliceblue'))\n\n\n\n\n\n\n\n\n\n\nSirmium was once one of the four capitals of the Roman Empire. A major city destoryed by the end of 6th century [Read more] (photo credit: serbianprivatetours.com)\n\n\n\n\n\n\n\n\nWarning\n\n\n\nAt here, xlim and ylim is applied inside coord_map() rather than the limits in scale_x_continuous(). When restricting axis limits on the scale, the geom_polygon() generated by ggplot2 could be clipped by plot borders and result in incomplete generation of the map areas.\n\n\nWith the map data we could plot out the locations of Emperor birth cities. The province borders in the ancient Roman Empire are drawn out in black lines. We could observe that the birth cities are mostly clustered around the two major city Rome and Sirmium, which gives us the next quesiton: What’s is different between these two clusters and how do they compare to other non-hotspot locations?\n\n\nHow did they rise to power?\nIn this pie chart below, most Emperors born around Rome inherited the position by their birthright, where a sizable proportion of Emperors born around Sirmium were appointed by the Army. The border location of Sirmium as seen in the map could have been a reason why the city became heavily stationed with troops, which provided opportunities for military usurpation. Emperors born other locations had a varieties of ways to put themselves in power. Still, regardless of birth cities, the majority of Roman Emperors are born into power.\n\n\nCode\nrome.hotspot &lt;- emperors.longlat %&gt;%\n  filter(between(long,12.48-2,12.48+2)&between(lat,41.89-2,41.89+2)) %&gt;%\n  pull(birth_cty) %&gt;%\n  unique()\n\nsirmium.hotspot &lt;- emperors.longlat %&gt;%\n  filter(between(long,19.61-2,19.61+2)&between(lat,44.97-2,44.97+2)) %&gt;%\n  pull(birth_cty) %&gt;%\n  unique()\n\nemperors %&gt;% \n  filter(!is.na(birth_cty)) %&gt;%\n  mutate(hotspots = case_when(\n    birth_cty %in% rome.hotspot ~ 'Rome hotspot',\n    birth_cty %in% sirmium.hotspot ~ 'Sirmium hotspot',\n    TRUE ~ 'Not hotspot' \n  )) %&gt;% \n  group_by(hotspots) %&gt;%\n  count(rise,sort=TRUE) %&gt;%\n  mutate(rise = factor(rise,level=c('Birthright','Election','Seized Power','Purchase',\n  'Appointment by Army','Appointment by Senate','Appointment by Emperor','Appointment by Praetorian Guard'\n  ))) %&gt;%\n  mutate(hotspots = factor(hotspots,level=c('Rome hotspot','Sirmium hotspot','Not hotspot'\n  ))) %&gt;%\n  ggplot(aes(x='',y=n,fill=rise)) +\n  geom_bar(position=\"fill\", stat=\"identity\", width=1)+\n    coord_polar(\"y\", start=0) +\n    facet_grid(.~hotspots) +\n  scale_fill_manual(values = c('Birthright'=\"#C3C377\",\n                               'Election'=\"#E68C7C\",\n                               'Seized Power'=\"#FFCC9E\",\n                               'Purchase'=\"#4F5157\",\n                               'Appointment by Army'=\"#FD8F24\",\n                               'Appointment by Senate'=\"#C03728\",\n                               'Appointment by Emperor'=\"#F5C04A\",\n                               'Appointment by Praetorian Guard' = '#6F5438'\n                               ))+\n  # Assign appropriate axis labels and titles  \n  labs(\n    fill='Routes to Power',\n    title = 'Percentage breakdown of routes to power in the two hotspots',\n    subtitle = 'While most Emperor in Rome rose by birth right, a sizable proportion of Sirmian Emperors \\nare appointed by army',\n    caption = 'Data Source: Wikipedia')+\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+\n  # Adjust text styles\n  theme_bw()+\n  theme(axis.title = element_blank(),\n        axis.text = element_blank(),\n        axis.ticks = element_blank(),\n        plot.title = element_text(size = 20,face = 'bold',color = 'black'),\n        plot.subtitle = element_text(size = 18),\n        strip.text = element_text(size = 16),\n        legend.title = element_text(size = 14,face = 'bold'),\n        legend.text = element_text(size = 14))\n\n\n\n\n\n\n\nHow did Roman Emperors died?\nSpeaking of intrigues and conflicts in Roman history, assassination has been a favorite Roman method to get rid of political enemies. One of the most famous Roman assassination was the Assassination of Julius Caesar, which passed Caesar’s power through his death wish to the first Roman Emperor, Caesar Augustus. Before the Roman Empire transitioned into the Dominate era (late Roman Empire), more than 20 Emperors died from various assassination successes.\n\n\nCode\nemperors %&gt;% \n  group_by(era) %&gt;%\n  count(cause,sort=TRUE) %&gt;%\n  mutate(era = factor(era,levels=c('Principate','Dominate'))) %&gt;%\n  ggplot(aes(x=tidytext::reorder_within(cause, n, within = era),n,fill=cause)) +\n  geom_col() +\n  tidytext::scale_x_reordered()+\n  scale_fill_manual(values = c('Assassination'=\"#ED665D\",\n                               'Natural Causes'=\"#67BF5C\",\n                               'Execution'=\"#FF9E4A\",\n                               'Suicide'=\"#729ECE\",\n                               'Died in Battle'=\"#AD8BC9\",\n                               'Unknown'=\"#A2A2A2\",\n                               'Captivity'=\"#A8786E\"))+\n  coord_flip() +\n  facet_grid(era~.,scales = \"free_y\")+\n  # Assign appropriate axis labels and titles  \n  xlab('Death Causes')+\n  ylab('Count') +\n  labs(title = 'Most common death causes for Roman emperors by Era', \n       subtitle = 'Before the Dominate era, most Roman emperors fell to schemes',\n       caption = 'Data Source: Wikipedia')+\n  # Adjust text styles\n  theme(axis.text = element_text(size = 14,face = 'bold'),\n        axis.title = element_text(size = 16,face = 'bold'),\n        plot.title = element_text(size = 20,face = 'bold',color = 'black'),\n        legend.position = \"none\",\n        plot.subtitle = element_text(size = 18),\n        strip.text = element_text(size = 16))\n\n\n\n\n\n\n\nReign length of each emperor across 400 years\nIn the plot below, the starts and ends of each reign are shown in segments. Intuitively, long lines indicate long and stable reigns of an Emperor, while suddenly increased slope of the curve indicates a period of instability. The region bounded by two dashed lines displays quick succession of power changes. This 50-year period is known as the Crisis of the Third Century.\n\n\nCode\n# Deal with BC time\nref = as.numeric(as.Date(\"1970-01-01\") - as.Date(\"0000-01-01\"))\n\n## Plot\nemperors %&gt;% \n  mutate(reign_start = case_when(\n    name == \"Augustus\" ~ as.Date(-(as.numeric(as.Date(\"0026-01-16\"))+ref), \"0000-01-01\"),  # New value for Augustus\n    TRUE ~ reign_start  # Keep the original value for other cases\n  ))%&gt;%\n  mutate(name = fct_reorder(name,reign_start))%&gt;%\n  ggplot(aes(y=name))+\n  geom_point(aes(x=reign_start),color='#F89217')+\n  geom_point(aes(x=reign_end),color='#4F7CBA')+\n  geom_segment(aes(x = reign_start, xend = reign_end, y = name, yend = name), color = \"black\", size = 1)+\n  geom_vline(xintercept = as.numeric(ymd('0235-03-18')),linetype=2) +\n  geom_vline(xintercept = as.numeric(ymd('0284-11-20')),linetype=2) +\n  # annotate(\"text\", x = ymd('0180-1-1'), y = 'Valerian', label = \"A period of instability?\",size= 6) +\n  # Assign appropriate axis labels and titles  \n  xlab('Years (AD)')+\n  ylab('Emperors') +\n  labs(title = 'Reign length of each Roman emperors', \n       subtitle = 'Before 235 AD, Roman Emperors reigns were mostly stable',\n       caption = 'Data Source: Wikipedia')+\n  # Adjust text styles\n  theme(axis.text = element_text(size = 14,face = 'bold'),\n        axis.title = element_text(size = 16,face = 'bold'),\n        axis.text.y = element_blank(),\n        legend.position = \"none\",\n        plot.title = element_text(size = 20,face = 'bold',color = 'black'),\n        plot.subtitle = element_text(size = 18))\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\nWhen dealing with “ancient” datasets, I inevitably encountered trouble with BC and AD time conversion. In our dataset, the reign start date of Augustus the first Emperor is recorded as a positive value of the BC date just as the subsequent AD dates. If directly plotted, it will mistakenly plot the start of Augustus reign after his reign ends.\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe solution here is to find the difference between the epoch time 1970-1-1 and start of the AD first century 0000-01-01. If we add the numerical value of the Augustus reign start date 0026-01-16 (BC) and apply a negative sign to it, it should represent the numerical value of the BC time in reference to 1970-1-1 as zero. Subsequent time calculations involving BC times will all use this method to derive the correct result.\n\n\n\n\nCrisis of the 3rd century?\n\nData wrangling\n\n\nCode\n# data wrangling\nemperors.crisis &lt;- emperors %&gt;% \n  mutate(reign_start = case_when(\n    name == \"Augustus\" ~ as.Date(-(as.numeric(as.Date(\"0026-01-16\"))+ref), \"0000-01-01\"),  # Adjust reign start date\n    TRUE ~ reign_start  # Keep the original value for other cases\n  )) %&gt;%\n  mutate(birth = case_when(\n    name == \"Augustus\" ~ as.Date(-(as.numeric(as.Date(\"0062-09-23\"))+ref), \"0000-01-01\"),  # Adjust birth dates\n    name == \"Tiberius\" ~ as.Date(-(as.numeric(as.Date(\"0041-11-16\"))+ref), \"0000-01-01\"),\n    name == \"Claudius\" ~ as.Date(-(as.numeric(as.Date(\"0009-08-01\"))+ref), \"0000-01-01\"),\n    name == \"Galba\"    ~ as.Date(-(as.numeric(as.Date(\"0002-12-24\"))+ref), \"0000-01-01\"),\n    TRUE ~ birth  # Keep the original value for other cases\n  )) %&gt;%\n  mutate(crisis = case_when(\n    reign_start &lt; ymd('0235-03-18') ~ 'Before',\n    reign_start &gt; ymd('0284-11-19') ~ 'After',\n    TRUE ~ 'During'\n    )) %&gt;% \n  mutate(reign_length = reign_end - reign_start) %&gt;%\n  mutate(reign_age = reign_start - birth) %&gt;%\n  mutate(retire_age = reign_end - birth) %&gt;%\n  mutate(life_length = death - birth) %&gt;%\n  mutate(crisis = factor(crisis,levels=c('Before','During','After')))\n\n## sumarize\nemperors.crisis %&gt;%\n  group_by(crisis) %&gt;%\n  filter(!is.na(birth)) %&gt;%\n  summarize(Avg_reign = as.integer(mean(reign_length)), Std_reign = as.integer(sd(reign_length)),Avg_life = as.integer(mean(life_length/365.25)),Std_life = as.integer(sd(life_length/365.25))) %&gt;%\n  rename(Crisis_Period = crisis,\n         Average_Reign_days = Avg_reign,\n         Standard_Deviation_Reign = Std_reign,\n         Average_Life_years = Avg_life,\n         Standard_Deviation_Life = Std_life\n         ) %&gt;%\n  kable(formtat='html',caption = 'Reign time and life time statistics before, during and after crisis')%&gt;%\n  row_spec(2,background = 'lightpink') %&gt;%\n  row_spec(0, bold=T) %&gt;%\n  kableExtra::kable_styling(bootstrap_options = c('hover','condensed','responsive'))\n\n\n\n\nReign time and life time statistics before, during and after crisis\n\n\nCrisis_Period\nAverage_Reign_days\nStandard_Deviation_Reign\nAverage_Life_years\nStandard_Deviation_Life\n\n\n\n\nBefore\n4054\n3699\n51\n18\n\n\nDuring\n1056\n1362\n53\n15\n\n\nAfter\n4467\n3167\n45\n16\n\n\n\n\n\n\n\n\n\n\n\n\n\nDuring the Crisis of the Third Century, the Roman Empire is divided into three parts and conflicted militarily, leading to economical collapse. [Read more] \n\n\nDuring the Crisis of the Third Century, the average reign length dramatically decreased. However, contrary to my intuition, the life length of the emperors during this time does not seem to be affected much.\n\n\n\nDeath Causes during crisis compared to before and after\nDuring the crisis period, we should expect more unnatural deaths due to wars and schemes. Compared to before the crisis, natural death cause occupies much less percentage. A few Emperors are died in battle. Interestingly, after the crisis, less Emperors fell to assassination, instead execution became more common.\n\n\nCode\nemperors.crisis %&gt;% \n  group_by(crisis) %&gt;%\n  count(cause,sort=TRUE) %&gt;%\n  mutate(cause = factor(cause,levels=c('Assassination','Natural Causes','Execution','Suicide','Died in Battle','Captivity','Unknown')))%&gt;%\n  ggplot(aes(fill=cause, y=n, x=crisis)) +\n  geom_bar(position=\"fill\", stat=\"identity\")+\n  scale_fill_manual(values = c('Assassination'=\"#ED665D\",\n                               'Natural Causes'=\"#67BF5C\",\n                               'Execution'=\"#FF9E4A\",\n                               'Suicide'=\"#729ECE\",\n                               'Died in Battle'=\"#AD8BC9\",\n                               'Unknown'=\"#A2A2A2\",\n                               'Captivity'=\"#A8786E\"))+\n  # Assign appropriate axis labels and titles  \n  xlab('Crisis periods')+\n  ylab('Percentage') +\n  labs(title = 'Percentage of each death cause per time period', \n       subtitle = 'Death from assassination gradually decreased by time period',\n       caption = 'Data Source: Wikipedia',\n       fill='Death Causes')+\n  # Adjust text styles\n  theme(axis.text = element_text(size = 14,face = 'bold'),\n        axis.title = element_text(size = 16,face = 'bold'),\n        plot.title = element_text(size = 20,face = 'bold',color = 'black'),\n        legend.title = element_text(size = 14,face = 'bold'),\n        legend.text = element_text(size = 14),\n        plot.subtitle = element_text(size = 18))"
  },
  {
    "objectID": "analysis.html#summary",
    "href": "analysis.html#summary",
    "title": "Example Analysis",
    "section": "Summary",
    "text": "Summary\nBy engaging with this dataset, I learned a lot about ancient Roman history. Our exploration of the birth cities of Roman Emperors helped us find Sirmium’s role as a vital military and political center within the Roman Empire. A notable shift in the curve depicting reign lengths directed our attention to the Crisis of the Third Century. Looking at the Emperors’ death causes offered us insights into the evolution of the Roman Empire.\nWhile many analyses strive to address contemporary issues, dissecting this ancient dataset is more like a benchmarking process for data analysis. It illustrated that data has the potential to unravel the underlying stories of the real world."
  },
  {
    "objectID": "analysis.html#functions-used",
    "href": "analysis.html#functions-used",
    "title": "Example Analysis",
    "section": "Functions used",
    "text": "Functions used\ndplyr: mutate(), group_by(), count(), filter(), select(), summarize(), left_join(), rename()\nggplot2: geom_col(), geom_point(), geom_segment(), geom_vline(), geom_bar(), geom_polygon(), geom_text()"
  }
]